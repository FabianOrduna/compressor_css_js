<?php
function compressor_css_js_schema(){
	$schema['compressor_css_js_files'] =
	array(
		'description' => 'Table to store css and js files directories.',
		
		'fields' =>array(
			'id' => array(
					'description' => 'The primary identifier for the file.',
					'type' => 'serial',
					'not null' => TRUE,
					'unsigned' => TRUE,
					),
			'filedomcode' => array(
					'description' => 'Domain used to get files',
					'type' => 'int',
					'unsigned' => TRUE,
				    'not null' => TRUE,
					),
			'name' => array(
					'description' => 'File name.',
	                'type' => 'varchar',
	                'length' => 255,
	                'not null' => TRUE,
	                #'default' => 'compressed_file',
					),
			'type' => array(
					'description' => 'Type of file: css(0) or js(1).',
					'type' => 'int',
					'unsigned' => TRUE,
				    'not null' => TRUE,
				    'default' => 0,
					),
			'unico' => array(
					'description' => 'Numer of files used to compress (1) for a single file or (0) for more than a file.',
					'type' => 'int',
					'unsigned' => TRUE,
				    'not null' => TRUE,
				    'default' => 0,
					),
			'recursos' => array(
					'description' => 'Source files used in compression.',
					#example: if style.css, colors.css and custom.css where compressed together
					#the value might be: style.css,colors.css,custom.css
	                'type' => 'varchar',
	                'length' => 255,
	                'not null' => TRUE,
	                #'default' => 'compressed_file',
					),
			'filepath' => array(
					'description' => 'Path where the compressed file was stored.',
					'type' => 'varchar',
					'length' => 500,
					'not null' => TRUE,
					),
			'update_time' => array(
					'description' => 'Time to trigger a new compression',
					'type' => 'float',
					'not null' => TRUE,
					),
			'updated_at' => array(
	                'description' => 'updated date time(yyyy-mm-dd H:i:s).',
	                'type' => 'varchar',
	                'mysql_type' => 'DATETIME',
	                'not null' => TRUE,
            		),
				),
		'primary key' => array('id'),
	);
	return $schema;
}


function compressor_css_js_update_7100(){
	$schema['compressor_css_js_files'] =
	array(
		'description' => 'Table to store css and js files directories.',
		
		'fields' =>array(
			'id' => array(
					'description' => 'The primary identifier for the file.',
					'type' => 'serial',
					'not null' => TRUE,
					'unsigned' => TRUE,
					),
			'filedomcode' => array(
					'description' => 'Domain used to get files',
					'type' => 'int',
					'unsigned' => TRUE,
				    'not null' => TRUE,
					),
			'name' => array(
					'description' => 'File name.',
	                'type' => 'varchar',
	                'length' => 255,
	                'not null' => TRUE,
	                #'default' => 'compressed_file',
					),
			'type' => array(
					'description' => 'Type of file: css(0) or js(1).',
					'type' => 'int',
					'unsigned' => TRUE,
				    'not null' => TRUE,
				    'default' => 0,
					),
			'unico' => array(
					'description' => 'Numer of files used to compress (1) for a single file or (0) for more than a file.',
					'type' => 'int',
					'unsigned' => TRUE,
				    'not null' => TRUE,
				    'default' => 0,
					),
			'recursos' => array(
					'description' => 'Source files used in compression.',
					#example: if style.css, colors.css and custom.css where compressed together
					#the value might be: style.css,colors.css,custom.css
	                'type' => 'varchar',
	                'length' => 255,
	                'not null' => TRUE,
	                #'default' => 'compressed_file',
					),
			'filepath' => array(
					'description' => 'Path where the compressed file was stored.',
					'type' => 'varchar',
					'length' => 500,
					'not null' => TRUE,
					),
			'update_time' => array(
					'description' => 'Time to trigger a new compression',
					'type' => 'float',
					'not null' => TRUE,
					),
			'updated_at' => array(
	                'description' => 'updated date time(yyyy-mm-dd H:i:s).',
	                'type' => 'varchar',
	                'mysql_type' => 'DATETIME',
	                'not null' => TRUE,
            		),
				),
		'primary key' => array('id'),
	);
	return $schema;
}

